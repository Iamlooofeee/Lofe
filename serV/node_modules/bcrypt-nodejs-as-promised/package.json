{
  "_args": [
    [
      {
        "raw": "bcrypt-nodejs-as-promised",
        "scope": null,
        "escapedName": "bcrypt-nodejs-as-promised",
        "name": "bcrypt-nodejs-as-promised",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Admin\\Desktop\\serV"
    ]
  ],
  "_from": "bcrypt-nodejs-as-promised@latest",
  "_id": "bcrypt-nodejs-as-promised@1.0.4",
  "_inCache": true,
  "_location": "/bcrypt-nodejs-as-promised",
  "_nodeVersion": "5.4.0",
  "_npmUser": {
    "name": "zodian",
    "email": "zodian-npm@outlook.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bcrypt-nodejs-as-promised",
    "scope": null,
    "escapedName": "bcrypt-nodejs-as-promised",
    "name": "bcrypt-nodejs-as-promised",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/bcrypt-nodejs-as-promised/-/bcrypt-nodejs-as-promised-1.0.4.tgz",
  "_shasum": "492905aea97d7329b7efc44a3ffb56f08485d9eb",
  "_shrinkwrap": null,
  "_spec": "bcrypt-nodejs-as-promised",
  "_where": "C:\\Users\\Admin\\Desktop\\serV",
  "author": {
    "name": "Zodian Casserly"
  },
  "bugs": {
    "url": "https://github.com/zodian/bcrypt-nodejs-as-promised/issues"
  },
  "dependencies": {
    "bcrypt-nodejs": "0.0.3",
    "when": "3.5.2"
  },
  "description": "A promisified bcrypt-nodejs",
  "devDependencies": {
    "chai": "^1.9.2",
    "chai-as-promised": "^4.1.1",
    "istanbul": "^0.3.2",
    "mocha": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "492905aea97d7329b7efc44a3ffb56f08485d9eb",
    "tarball": "https://registry.npmjs.org/bcrypt-nodejs-as-promised/-/bcrypt-nodejs-as-promised-1.0.4.tgz"
  },
  "gitHead": "6264139aa42f4c988e39f599379e7b1d7ccf625f",
  "homepage": "https://github.com/zodian/bcrypt-nodejs-as-promised",
  "keywords": [
    "bcrypt",
    "bcrypt-nodejs",
    "promise"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "zodian",
      "email": "zodian-npm@outlook.com"
    }
  ],
  "name": "bcrypt-nodejs-as-promised",
  "optionalDependencies": {},
  "readme": "bcrypt-nodejs-as-promised\r\n==================\r\nThis is a modified version of the original bcrypt-as-promised as I was having issues using bcrypt.\r\n\r\nOriginal can be found here [bcrypt-as-promised](https://github.com/iceddev/bcrypt-as-promised)\r\n\r\nA promisified version of [bcrypt](https://github.com/ncb000gt/node.bcrypt.js)\r\n\r\n## Install via NPM\r\n```\r\nnpm install bcrypt-nodejs-as-promised\r\n```\r\n\r\n## Basic Usage\r\n\r\nhashing:\r\n```javascript\r\n    bcyrpt.hash('my password', 10)\r\n      .then(console.log, console.error)\r\n```\r\n\r\ncomparing:\r\n(note that an invalid password/hash combo errors as a rejected promise)\r\n```javascript\r\n    bcyrpt.compare('my password', someHash)\r\n      .then(console.log, console.error)\r\n```\r\n\r\n__Note: an invalid password/hash combo errors as a rejected promise__\r\n\r\nThe rejection can be checked against `instanceof bcrypt.MISMATCH_ERROR`\r\n\r\n```js\r\nbcrypt.compare('invalid password', someHash)\r\n  .then(handleValidPassword)\r\n  .catch(bcrypt.MISMATCH_ERROR, handleInvalidPassword)\r\n  .catch(handleOtherErrors);\r\n```\r\n\r\ngenerating a salt:\r\n```javascript\r\n    bcyrpt.genSalt(10)\r\n      .then(console.log, console.error)\r\n```\r\n\r\ncalculating the rounds used in a salt:\r\n```javascript\r\n    bcyrpt.getRounds(someHash)\r\n      .then(console.log, console.error)\r\n```\r\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/zodian/bcrypt-nodejs-as-promised.git"
  },
  "scripts": {
    "check-coverage": "istanbul check-coverage",
    "test": "istanbul cover _mocha && npm run check-coverage"
  },
  "version": "1.0.4"
}
